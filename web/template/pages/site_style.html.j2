{% set cur_data = {} %}

{% include 'includes/page/page_start_minimal.html.j2' %}

<!-- Content Sections -->
<div id="site_style">
  {% include 'component/site_style.html.j2' %}
</div>

{% include 'includes/page/page_end_minimal.html.j2' %}



<script>
  var WidgetOptions = {'site_page_uri': '{{uri}}', 'uri': '{{uri}}'};
  var StartedFirst = false;

  function RenderWidgetFirst() {
    StartedFirst = true;
    // RenderWidget();
  }

  function RenderWidget(command) {
    // Dont let this get called until we have the values
    if (!StartedFirst) {
      // RenderWidgetFirst();
      return;
    }

    // Set a command
    if (command != undefined) SetWidgetOption('__command', command)
    else SetWidgetOption('__command', 'set')

    // Scrape before our API request
    ScrapeData()

    // Rerender the sidebar first, because we need to load new data for editing, or we get duplicated values as we switch
    htmx.ajax('POST', '/api/space_style', {'target': '#site_style', 'values': WidgetOptions})

    // Reload the iframe target
    document.getElementById('view_page_render').contentWindow.location.reload();

    // TryFixFlowbiteDynamicLoad()
  }

  
  function TryFixFlowbiteDynamicLoad() {
    
    // // Try to init flowbite again to get Tabs and stuff to work
    // initFlowbite();
    // // Try to init flowbite again to get Tabs and stuff to work
    var tabs = FlowbiteInstances.getInstance('Tabs', 'default-tab');
    // alert(JSON.stringify(tabs.getActiveTab()))

    next_active_tab_id = tabs.getActiveTab().id
    next_active_tab_id = next_active_tab_id.replace('#', '')

    var tabsElement = document.getElementById('default-tab');

    var tabElements = [
    {
        id: 'content-1',
        triggerEl: document.querySelector('#content-1-tab'),
        targetEl: document.querySelector('#content-1'),
    },
    {
        id: 'content-2',
        triggerEl: document.querySelector('#content-2-tab'),
        targetEl: document.querySelector('#content-2'),
    },
    {
        id: 'content-3',
        triggerEl: document.querySelector('#content-3-tab'),
        targetEl: document.querySelector('#content-3'),
    },
    {
        id: 'content-4',
        triggerEl: document.querySelector('#content-4-tab'),
        targetEl: document.querySelector('#content-4'),
    },
    ];

    var options = {
      defaultTabId: next_active_tab_id,
      // activeClasses:
      //     'text-blue-600 hover:text-blue-600 border-blue-600',
      // inactiveClasses:
      //     'text-gray-500 hover:text-gray-600 border-gray-100 hover:border-gray-300',
      onShow: () => {
          console.log('tab is shown');
      },
    };

    // instance options with default values
    const instanceOptions = {
      id: 'default-tab',
      override: true
    };


    initFlowbite();
    var tabs = new Tabs(tabsElement, tabElements, options, instanceOptions);

  }

  function ScrapeData()
  {
    // Get all the inputs and checkboxes
    var inputs = Array.from(document.getElementsByClassName("widget_input"));
    inputs.forEach((element, index) => SetWidgetOption(element.getAttribute('id'), element.value));

    var checkboxes = Array.from(document.getElementsByClassName("widget_checkbox"));
    checkboxes.forEach((element, index) => SetWidgetOption(element.getAttribute('id'), element.checked));
  }

  function SetWidgetOption(name, value) {
    WidgetOptions[name] = value;
  }

  // Render the widget after we load
  setTimeout(RenderWidgetFirst, 250);
</script>
