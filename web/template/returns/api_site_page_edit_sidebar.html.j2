
<!-- drawer component -->
<div id="drawer-navigation" class="fixed top-0 left-0 z-40 w-64 h-screen p-4 overflow-y-auto transition-transform -translate-x-full bg-white dark:bg-gray-800" tabindex="-1" aria-labelledby="drawer-navigation-label">


  <h5 id="drawer-navigation-label" class="text-base font-semibold text-gray-500 uppercase dark:text-gray-400">Menu</h5>
   <button type="button" data-drawer-hide="drawer-navigation" aria-controls="drawer-navigation" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 end-2.5 inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" >
       <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
       <span class="sr-only">Close menu</span>
   </button>


    <p class="p-4">
      Widget: {{ request.widget }}
    </p>
  
    <button type="button" onclick="RenderWidget()" class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800">
      Render Widget
    </button>
    
    <!-- Hidden ID Value -->  
    <input id="widget_id" type="hidden" value="{{ request.widget }}" class="widget_input hidden">
  
    <div id="widget_editor_dynamic">
  
    {% include 'returns/api_site_page_edit_sidebar_widget.html.j2' %}
  
    </div>
</div>


<script>
  var WidgetOptions = {};
  var StartedFirst = false;

  function RenderWidgetFirst() {
    StartedFirst = true;
    RenderWidget();
  }

  function RenderWidget() {
    // Dont let this get called until we have the values
    if (!StartedFirst) {
      // RenderWidgetFirst();
      return;
    }

    var inputs = Array.from(document.getElementsByClassName("widget_input"));
    inputs.forEach((element, index) => SetWidgetOption(element.getAttribute('id'), element.value));

    var checkboxes = Array.from(document.getElementsByClassName("widget_checkbox"));
    checkboxes.forEach((element, index) => SetWidgetOption(element.getAttribute('id'), element.checked));

    htmx.ajax('POST', '/api/site_editor_dynamic', {'target': '#site_editor_widget', 'values': WidgetOptions})
    htmx.ajax('POST', '/api/site_editor_sidebar', {'target': '#widget_editor_dynamic', 'values': WidgetOptions})
  }

  function SetWidgetOption(name, value) {
    WidgetOptions[name] = value;
  }

  // Render the widget after we load
  setTimeout(RenderWidgetFirst, 250);
</script>

