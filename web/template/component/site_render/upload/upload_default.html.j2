<div class="flex items-center justify-center w-full" onclick="document.getElementById('upload-file').click()" ondrop="UploadDropHandler(event); return true;" ondragover="UploadDragOverHandler(event);">
  <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
      <div class="flex flex-col items-center justify-center pt-5 pb-6">
          <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
          </svg>
          <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
          <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
      </div>
      <form id='form_upload_{{widget_id}}' hx-encoding='multipart/form-data' hx-post='/upload_single' hx-target='#upload_result'>
        <input id="upload-file" name="file" type="file" class="hidden" onchange="document.getElementById('form_submit').click()">
        <button class="hidden" id="form_submit"></button>
      </form>
    </label>
</div> 

<!-- Progress Bar -->
<div class="w-full bg-gray-200 rounded-full h-2.5 mb-4 dark:bg-gray-700">
  <div class="bg-blue-600 h-2.5 rounded-full dark:bg-blue-500" id="progress" style="width: 2%"></div>
</div>

<div id="upload_result">

</div>


<script>
  // Bind our progress to the progress slider
  document.getElementById('form_upload_{{widget_id}}').removeEventListener('htmx:xhr:progress', UploadProgress)
  htmx.on('#form_upload_{{widget_id}}', 'htmx:xhr:progress', UploadProgress)

  function UploadProgress(evt) {
    var percent_complete = evt.detail.loaded / evt.detail.total * 100
    htmx.find('#progress').style.width = percent_complete + '%'
    // htmx.find('#progress').setAttribute('value', percent_complete)   // For Progress Bar

    console.log(`Upload: ${percent_complete}`);
    if (percent_complete >= 99.99) console.log(`Upload: ${percent_complete}  Completed`);
  }

  function UploadDropHandler(evt)
  {
    console.log("File(s) dropped");

    // Prevent default behavior (Prevent file from being opened)
    evt.preventDefault();

    var form = document.getElementById('form_upload_{{widget_id}}')
    var formData = new FormData(form);
    
    if (evt.dataTransfer.items) {
      // Use DataTransferItemList interface to access the file(s)
      [...evt.dataTransfer.items].forEach((item, i) => {
        // If dropped items aren't files, reject them
        if (item.kind === "file") {
          const file = item.getAsFile();
          console.log(`… file[${i}].name = ${file.name}`);

          formData.delete("file");
          formData.append("file", file, file.name);
        }
      });
    } else {
      // Use DataTransfer interface to access the file(s)
      [...evt.dataTransfer.files].forEach((file, i) => {
        console.log(`… file[${i}].name = ${file.name}`);

        formData.delete("file");
        formData.append("file", file, file.name);
      });
    }

    // var form = document.getElementById('form_submit').click()
  }

  function UploadDragOverHandler(evt)
  {
    // console.log("File(s) in drop zone");

    // Prevent default behavior (Prevent file from being opened)
    evt.preventDefault();    
  }
</script>

